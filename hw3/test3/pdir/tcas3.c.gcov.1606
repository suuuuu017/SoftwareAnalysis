        -:    0:Source:tcas3.c
        -:    0:Graph:tcas3.gcno
        -:    0:Data:tcas3.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:
        -:    2:/* $Log: tcas.c,v $
        -:    3: * Revision 10/2020 elbaum -- fault version
        -:    4: * */
        -:    5:
        -:    6:#include <stdio.h>
        -:    7:
        -:    8:#define OLEV       600		/* in feets/minute */
        -:    9:#define MAXALTDIFF 600		/* max altitude difference in feet */
        -:   10:#define MINSEP     300          /* min separation in feet */
        -:   11:#define NOZCROSS   100		/* in feet */
        -:   12:				/* variables */
        -:   13:
        -:   14:typedef int bool;
        -:   15:
        -:   16:int Cur_Vertical_Sep;
        -:   17:bool High_Confidence;
        -:   18:bool Two_of_Three_Reports_Valid;
        -:   19:
        -:   20:int Own_Tracked_Alt;
        -:   21:int Own_Tracked_Alt_Rate;
        -:   22:int Other_Tracked_Alt;
        -:   23:
        -:   24:int Alt_Layer_Value;		/* 0, 1, 2, 3 */
        -:   25:int Positive_RA_Alt_Thresh[4];
        -:   26:
        -:   27:int Up_Separation;
        -:   28:int Down_Separation;
        -:   29:
        -:   30:				/* state variables */
        -:   31:int Other_RAC;			/* NO_INTENT, DO_NOT_CLIMB, DO_NOT_DESCEND */
        -:   32:#define NO_INTENT 0
        -:   33:#define DO_NOT_CLIMB 1
        -:   34:#define DO_NOT_DESCEND 2
        -:   35:
        -:   36:int Other_Capability;		/* TCAS_TA, OTHER */
        -:   37:#define TCAS_TA 1
        -:   38:#define OTHER 2
        -:   39:
        -:   40:int Climb_Inhibit;		/* true/false */
        -:   41:
        -:   42:#define UNRESOLVED 0
        -:   43:#define UPWARD_RA 1
        -:   44:#define DOWNWARD_RA 2
        -:   45:
    #####:   46:void initialize()
        -:   47:{
    #####:   48:    Positive_RA_Alt_Thresh[0] = 400;
    #####:   49:    Positive_RA_Alt_Thresh[1] = 500;
    #####:   50:    Positive_RA_Alt_Thresh[2] = 640;
    #####:   51:    Positive_RA_Alt_Thresh[3] = 740;
    #####:   52:}
        -:   53:
    #####:   54:int ALIM ()
        -:   55:{
    #####:   56: return Positive_RA_Alt_Thresh[Alt_Layer_Value];
        -:   57:}
        -:   58:
    #####:   59:int Inhibit_Biased_Climb ()
        -:   60:{
    #####:   61:    return (Climb_Inhibit ? Up_Separation + NOZCROSS : Up_Separation);
        -:   62:}
        -:   63:
    #####:   64:bool Non_Crossing_Biased_Climb()
        -:   65:{
        -:   66:    int upward_preferred;
        -:   67:    int upward_crossing_situation;
        -:   68:    bool result;
        -:   69:
    #####:   70:    upward_preferred = Inhibit_Biased_Climb() > Down_Separation;
    #####:   71:    if (upward_preferred)
        -:   72:    {
    #####:   73:	result = !(Own_Below_Threat()) || ((Own_Below_Threat()) && (!(Down_Separation >= ALIM())));
        -:   74:    }
        -:   75:    else
        -:   76:    {	
    #####:   77:	result = Own_Above_Threat() && (Cur_Vertical_Sep >= MINSEP) && (Up_Separation >= ALIM());
        -:   78:    }
    #####:   79:    return result;
        -:   80:}
        -:   81:
    #####:   82:bool Non_Crossing_Biased_Descend()
        -:   83:{
        -:   84:    int upward_preferred;
        -:   85:    int upward_crossing_situation;
        -:   86:    bool result;
        -:   87:
    #####:   88:    upward_preferred = Inhibit_Biased_Climb() > Down_Separation;
    #####:   89:    if (upward_preferred)
        -:   90:    {
    #####:   91:	result = Own_Below_Threat() && (Cur_Vertical_Sep >= MINSEP) && (Down_Separation >= ALIM());
        -:   92:    }
        -:   93:    else
        -:   94:    {
    #####:   95:	result = Own_Above_Threat() && Up_Separation >= ALIM(); // Mutant: removed first condition -> !(Own_Above_Threat()) || 
        -:   96:    }
    #####:   97:    return result;
        -:   98:}
        -:   99:
    #####:  100:bool Own_Below_Threat()
        -:  101:{
    #####:  102:    return (Own_Tracked_Alt < Other_Tracked_Alt);
        -:  103:}
        -:  104:
    #####:  105:bool Own_Above_Threat()
        -:  106:{
    #####:  107:    return (Other_Tracked_Alt < Own_Tracked_Alt);
        -:  108:}
        -:  109:
    #####:  110:int alt_sep_test()
        -:  111:{
        -:  112:    bool enabled, tcas_equipped, intent_not_known;
        -:  113:    bool need_upward_RA, need_downward_RA;
        -:  114:    int alt_sep;
        -:  115:
    #####:  116:    enabled = High_Confidence && (Own_Tracked_Alt_Rate <= OLEV) && (Cur_Vertical_Sep > MAXALTDIFF);
    #####:  117:    tcas_equipped = Other_Capability == TCAS_TA;
    #####:  118:    intent_not_known = Two_of_Three_Reports_Valid && Other_RAC == NO_INTENT;
        -:  119:    
    #####:  120:    alt_sep = UNRESOLVED;
        -:  121:    
    #####:  122:    if (enabled && ((tcas_equipped && intent_not_known) || !tcas_equipped))
        -:  123:    {
    #####:  124:	need_upward_RA = Non_Crossing_Biased_Climb() && Own_Below_Threat();
    #####:  125:	need_downward_RA = Non_Crossing_Biased_Descend() && Own_Above_Threat();
    #####:  126:	if (need_upward_RA && need_downward_RA)
        -:  127:        /* unreachable: requires Own_Below_Threat and Own_Above_Threat
        -:  128:           to both be true - that requires Own_Tracked_Alt < Other_Tracked_Alt
        -:  129:           and Other_Tracked_Alt < Own_Tracked_Alt, which isn't possible */
    #####:  130:	    alt_sep = UNRESOLVED;
    #####:  131:	else if (need_upward_RA)
    #####:  132:	    alt_sep = UPWARD_RA;
    #####:  133:	else if (need_downward_RA)
    #####:  134:	    alt_sep = DOWNWARD_RA;
        -:  135:	else
    #####:  136:	    alt_sep = UNRESOLVED;
        -:  137:    }
        -:  138:    
    #####:  139:    return alt_sep;
        -:  140:}
        -:  141:
        1:  142:main(argc, argv)
        -:  143:int argc;
        -:  144:char *argv[];
        -:  145:{
        1:  146:    if(argc < 13)
        -:  147:    {
        1:  148:	fprintf(stdout, "Error: Command line arguments are\n");
        1:  149:	fprintf(stdout, "Cur_Vertical_Sep, High_Confidence, Two_of_Three_Reports_Valid\n");
        1:  150:	fprintf(stdout, "Own_Tracked_Alt, Own_Tracked_Alt_Rate, Other_Tracked_Alt\n");
        1:  151:	fprintf(stdout, "Alt_Layer_Value, Up_Separation, Down_Separation\n");
        1:  152:	fprintf(stdout, "Other_RAC, Other_Capability, Climb_Inhibit\n");
        1:  153:	exit(1);
        -:  154:    }
    #####:  155:    initialize();
    #####:  156:    Cur_Vertical_Sep = atoi(argv[1]);
    #####:  157:    High_Confidence = atoi(argv[2]);
    #####:  158:    Two_of_Three_Reports_Valid = atoi(argv[3]);
    #####:  159:    Own_Tracked_Alt = atoi(argv[4]);
    #####:  160:    Own_Tracked_Alt_Rate = atoi(argv[5]);
    #####:  161:    Other_Tracked_Alt = atoi(argv[6]);
    #####:  162:    Alt_Layer_Value = atoi(argv[7]);
    #####:  163:    Up_Separation = atoi(argv[8]);
    #####:  164:    Down_Separation = atoi(argv[9]);
    #####:  165:    Other_RAC = atoi(argv[10]);
    #####:  166:    Other_Capability = atoi(argv[11]);
    #####:  167:    Climb_Inhibit = atoi(argv[12]);
        -:  168:
    #####:  169:    fprintf(stdout, "%d\n", alt_sep_test());
    #####:  170:    exit(0);
        -:  171:}
        -:  172:
